import 'package:flutter/material.dart';
import 'dart:math';
void main() {
  runApp(const MyApp()); // –ó–∞–ø—É—Å–∫ –¥–æ–¥–∞—Ç–∫—É
}
// –ì–æ–ª–æ–≤–Ω–∏–π –∫–ª–∞—Å –¥–æ–¥–∞—Ç–∫—É (StatelessWidget, –æ—Å–∫—ñ–ª—å–∫–∏ –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è)
class MyApp extends StatelessWidget {
  const MyApp({super.key});
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: '–î–æ–¥–∞—Ç–æ–∫ –∑ –ª—ñ—á–∏–ª—å–Ω–∏–∫–æ–º —ñ —Å—Ç—ñ–∫–µ—Ä–∞–º–∏', // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–¥–∞—Ç–∫—É
      theme: ThemeData(
        primarySwatch: Colors.blue, // –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–µ–º–∏ –¥–æ–¥–∞—Ç–∫—É (—Å–∏–Ω—è –∫–æ–ª—å–æ—Ä–æ–≤–∞ –ø–∞–ª—ñ—Ç—Ä–∞)
      ),
      home: const MyHomePage(), // –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –¥–æ–¥–∞—Ç–∫—É
    );
  }
}
// –°—Ç–æ—Ä—ñ–Ω–∫–∞ –¥–æ–¥–∞—Ç–∫—É –∑ –¥–∏–Ω–∞–º—ñ—á–Ω–∏–º —Å—Ç–∞–Ω–æ–º (StatefulWidget)
class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key});
  @override
  State<MyHomePage> createState() => _MyHomePageState(); // –°—Ç–≤–æ—Ä—é—î —Å—Ç–∞–Ω –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
}
// –°—Ç–∞–Ω –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ (_MyHomePageState)
class _MyHomePageState extends State<MyHomePage> with TickerProviderStateMixin {
  int _counter = 0; // –õ—ñ—á–∏–ª—å–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω—å
  Color _textColor = Colors.black; // –ü–æ—Ç–æ—á–Ω–∏–π –∫–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞
  final List<Color> _colors = [ // –°–ø–∏—Å–æ–∫ –∫–æ–ª—å–æ—Ä—ñ–≤ –¥–ª—è –≤–∏–ø–∞–¥–∫–æ–≤–æ—ó –∑–º—ñ–Ω–∏ —Ç–µ–∫—Å—Ç—É
    Colors.red,
    Colors.blue,
    Colors.green,
    Colors.orange,
    Colors.purple,
    Colors.pink,
    Colors.teal,
    Colors.yellow,
  ];
  // –°–ø–∏—Å–æ–∫ –µ–º–æ–¥–∑—ñ-—Å—Ç—ñ–∫–µ—Ä—ñ–≤
  final List<String> _stickers = ['üéâ', 'üòÇ', 'ü•≥', 'üòé', 'ü§©', 'üçÄ', 'üí•', 'üéà'];
  // –°–ø–∏—Å–æ–∫ –¥–ª—è –∞–Ω—ñ–º–æ–≤–∞–Ω–∏—Ö —Å—Ç—ñ–∫–µ—Ä—ñ–≤, —â–æ –±—É–¥—É—Ç—å –ø–∞–¥–∞—Ç–∏
  List<Widget> _flyingStickers = [];
  // –ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä –¥–ª—è –≤–≤–µ–¥–µ–Ω–æ–≥–æ —á–∏—Å–ª–∞
  TextEditingController _controller = TextEditingController();
  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ —Å—Ç—ñ–∫–µ—Ä–∞, —â–æ –∑'—è–≤–ª—è—î—Ç—å—Å—è —É –≤–∏–ø–∞–¥–∫–æ–≤–æ–º—É –º—ñ—Å—Ü—ñ
  void _addFallingSticker() {
    setState(() {
      String sticker = _stickers[Random().nextInt(_stickers.length)]; // –í–∏–ø–∞–¥–∫–æ–≤–∏–π —Å—Ç—ñ–∫–µ—Ä
      _flyingStickers.add(_buildFallingSticker(sticker)); // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–æ–≤–∞–Ω–∏–π —Å—Ç—ñ–∫–µ—Ä
    });
  }
  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–Ω—ñ–º–æ–≤–∞–Ω–æ–≥–æ —Å—Ç—ñ–∫–µ—Ä–∞
  Widget _buildFallingSticker(String sticker) {
    double screenWidth = MediaQuery.of(context).size.width; // –®–∏—Ä–∏–Ω–∞ –µ–∫—Ä–∞–Ω–∞
    double screenHeight = MediaQuery.of(context).size.height; // –í–∏—Å–æ—Ç–∞ –µ–∫—Ä–∞–Ω–∞
    // –í–∏–ø–∞–¥–∫–æ–≤–∞ –ø–æ—á–∞—Ç–∫–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è —Å—Ç—ñ–∫–µ—Ä–∞
    double startX = Random().nextDouble() * screenWidth;
    double startY = Random().nextDouble() * (screenHeight / 2); // –í–µ—Ä—Ö–Ω—è –ø–æ–ª–æ–≤–∏–Ω–∞ –µ–∫—Ä–∞–Ω–∞
    return AnimatedPositioned(
      duration: const Duration(seconds: 2), // –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –∞–Ω—ñ–º–∞—Ü—ñ—ó
      left: startX, // –ü–æ—á–∞—Ç–∫–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—ñ
      top: startY,  // –ü–æ—á–∞—Ç–∫–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ
      child: Text(
        sticker,
        style: const TextStyle(fontSize: 50), // –†–æ–∑–º—ñ—Ä —Ç–µ–∫—Å—Ç—É (—Å—Ç—ñ–∫–µ—Ä–∞)
      ),
      onEnd: () {
        setState(() {
          _flyingStickers.removeAt(0); // –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç—ñ–∫–µ—Ä –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
        });
      },
      bottom: 0, // –°—Ç—ñ–∫–µ—Ä–∏ –ø–∞–¥–∞—é—Ç—å –≤–Ω–∏–∑
    );
  }
  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±—ñ–ª—å—à–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ –∞–±–æ –æ–±–Ω—É–ª–µ–Ω–Ω—è –ø—Ä–∏ –≤–≤–µ–¥–µ–Ω–Ω—ñ "avadakedavra"
  void _incrementCounter() {
    setState(() {
      String inputValue = _controller.text; // –û—Ç—Ä–∏–º—É—î–º–æ –≤–≤–µ–¥–µ–Ω–∏–π —Ç–µ–∫—Å—Ç
      if (inputValue.toLowerCase() == 'avadakedavra') { // –Ø–∫—â–æ –≤–≤–µ–¥–µ–Ω–æ "avadakedavra"
        _counter = 0; // –û–±–Ω—É–ª–∏—Ç–∏ –ª—ñ—á–∏–ª—å–Ω–∏–∫
      } else {
        int incrementValue = int.tryParse(inputValue) ?? 1; // –Ø–∫—â–æ –Ω–µ —á–∏—Å–ª–æ - —ñ–Ω–∫—Ä–µ–º–µ–Ω—Ç –Ω–∞ 1
        _counter += incrementValue; // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –Ω–∞ –≤–≤–µ–¥–µ–Ω–µ —á–∏—Å–ª–æ
      }
      _textColor = _colors[Random().nextInt(_colors.length)]; // –í–∏–ø–∞–¥–∫–æ–≤–∏–π –∫–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É
      _addFallingSticker(); // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π —Å—Ç—ñ–∫–µ—Ä, —â–æ –ø–∞–¥–∞—î
    });
  }
@override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('–õ—ñ—á–∏–ª—å–Ω–∏–∫ –∑—ñ —Å—Ç—ñ–∫–µ—Ä–∞–º–∏'), // –ó–∞–≥–æ–ª–æ–≤–æ–∫ AppBar
      ),
      body: Stack(
        children: [
          // –û—Å–Ω–æ–≤–Ω–∞ —á–∞—Å—Ç–∏–Ω–∞: —Ç–µ–∫—Å—Ç, –ª—ñ—á–∏–ª—å–Ω–∏–∫, –ø–æ–ª–µ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è —ñ –∫–Ω–æ–ø–∫–∞
          Center(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center, // –í–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è –ø–æ —Ü–µ–Ω—Ç—Ä—É
              children: <Widget>[
                const Text('–í–∏ –Ω–∞—Ç–∏—Å–Ω—É–ª–∏ –∫–Ω–æ–ø–∫—É —Å—Ç—ñ–ª—å–∫–∏ —Ä–∞–∑—ñ–≤:'),
                Text(
                  '$_counter', // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞
                  style: TextStyle(
                    fontSize: 40, // –†–æ–∑–º—ñ—Ä —Ç–µ–∫—Å—Ç—É
                    color: _textColor, // –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É
                  ),
                ),
                const SizedBox(height: 20), // –ü—Ä–æ—Å—Ç—ñ—Ä –º—ñ–∂ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏
                // –ü–æ–ª–µ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è —á–∏—Å–ª–∞ –∞–±–æ "avadakedavra"
                Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 50.0),
                  child: TextField(
                    controller: _controller, // –ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–≤–µ–¥–µ–Ω–æ–≥–æ —á–∏—Å–ª–∞
                    keyboardType: TextInputType.text, // –¢–∏–ø –≤–≤–µ–¥–µ–Ω–Ω—è - —Ç–µ–∫—Å—Ç –∞–±–æ —á–∏—Å–ª–∞
                    decoration: const InputDecoration(
                      labelText: '–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –∞–±–æ avadakedavra', // –ü—ñ–¥–∫–∞–∑–∫–∞ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                      border: OutlineInputBorder(), // –°—Ç–∏–ª—å –ø–æ–ª—è
                    ),
                  ),
                ),
                const SizedBox(height: 20), // –ü—Ä–æ—Å—Ç—ñ—Ä –º—ñ–∂ –ø–æ–ª–µ–º —Ç–∞ –∫–Ω–æ–ø–∫–æ—é
                // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–±—ñ–ª—å—à–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ –∞–±–æ –æ–±–Ω—É–ª–µ–Ω–Ω—è
                ElevatedButton(
                  onPressed: _incrementCounter, // –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ
                  child: const Text(
                    '–ù–∞—Ç–∏—Å–Ω–∏ –º–µ–Ω–µ!', // –¢–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø—Ü—ñ
                    style: TextStyle(fontSize: 24),
                  ),
                  style: ElevatedButton.styleFrom(
                    padding: const EdgeInsets.symmetric(
                      horizontal: 30, // –í–Ω—É—Ç—Ä—ñ—à–Ω—ñ –≤—ñ–¥—Å—Ç—É–ø–∏
                      vertical: 15,
                    ),
                  ),
                ),
              ],
            ),
          ),
          ..._flyingStickers, // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–æ–≤–∞–Ω—ñ —Å—Ç—ñ–∫–µ—Ä–∏ –≤ Stack
        ],
      ),
    );
  }
}
